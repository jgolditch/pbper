{"version":3,"sources":["../node_modules/keyv/src sync","../node_modules/@pusher/chatkit-server/node_modules/got/source sync","components/UsernameForm.js","components/MessageList.js","components/SendMessageForm.js","components/TypingIndicator.js","components/WhosOnlineList.js","components/ChatScreen.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","UsernameForm","props","state","username","onSubmit","bind","onChange","preventDefault","this","setState","target","value","type","Component","MessagesList","styles","container","overflowY","flex","ul","listStyle","li","marginTop","marginBottom","senderUsername","fontWeight","message","fontSize","style","messages","map","index","key","senderId","text","SendMessageForm","padding","borderTop","form","display","input","color","background","outline","border","placeholder","TypingIndicator","usersWhoAreTyping","length","slice","join","WhosOnlineList","users","user","currentUser","presenceState","name","presence","renderUsers","WhosOnlineListItem","alignItems","paddingTop","paddingBottom","div","borderRadius","width","height","marginRight","backgroundColor","children","ChatScreen","currentRoom","sendMessage","sendTypingEvent","roomId","isTypingIn","catch","error","console","Chatkit","ChatManager","instanceLocator","userId","currentUsername","tokenProvider","TokenProvider","url","connect","then","subscribeToRoom","messageLimit","hooks","onMessage","onUserStartedTyping","onUserStoppedTyping","filter","onPresenceChange","forceUpdate","flexDirection","chatContainer","onlineListContainer","chatListContainer","MessageList","chatList","chatkit","App","currentScreen","onUsernameSubmitted","createUser","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4870bf41.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 271;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 279;","import React, { Component } from 'react'\n\nclass UsernameForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {username: ''}\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n    this.props.onSubmit(this.state.username)\n  }\n\n  onChange(e) {\n    this.setState({username: e.target.value})\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h2>What is your username?</h2>\n          <form onSubmit={this.onSubmit}>\n            <input type='text' onChange={this.onChange}/>\n            <input type='submit'/>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UsernameForm","import React, { Component } from 'react'\n\nclass MessagesList extends Component {\n  render() {\n    const styles = {\n      container: {\n        overflowY: 'scroll',\n        flex: 1\n      },\n      ul: {\n        listStyle: 'none'\n      },\n      li: {\n        marginTop: 13,\n        marginBottom: 13\n      },\n      senderUsername: {\n        fontWeight: 'bold'\n      },\n      message: {\n        fontSize: 15\n      }\n    }\n    return (\n      <div\n        style={{\n          ...this.props.style,\n          ...styles.container\n        }}>\n        <ul style={styles.ul}>\n          {this.props.messages.map((message, index) => (\n            <li key={index} style={styles.li}>\n              <div>\n                <span style={styles.senderUsername}>{message.senderId}</span>{' '}\n              </div>\n              <p style={styles.message}>{message.text}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default MessagesList","import React, { Component } from 'react'\n\nclass SendMessageForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: ''\n    }\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n    this.props.onSubmit(this.state.text)\n    this.setState({\n      text: ''\n    })\n  }\n\n  onChange(e) {\n    this.setState({\n      text: e.target.value\n    })\n    if (this.props.onChange) {\n      this.props.onChange()\n    }\n  }\n\n  render() {\n    const styles = {\n      container: {\n        padding: 20,\n        borderTop: '1px #4C758F solid',\n        marginBottom: 20\n      },\n      form: {\n        display: 'flex'\n      },\n      input: {\n        color: 'inherit',\n        background: 'none',\n        outline: 'none',\n        border: 'none',\n        flex: 1,\n        fontSize: 16\n      }\n    }\n    return (\n      <div style={styles.container}>\n        <div>\n          <form onSubmit={this.onSubmit} style={styles.form}>\n            <input\n              type='text'\n              placeholder='Type a message here...'\n              onChange={this.onChange}\n              value={this.state.text}\n              style={styles.input}\n            />\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SendMessageForm","import React, { Component } from 'react'\n\nclass TypingIndicator extends Component {\n  render() {\n    if (this.props.usersWhoAreTyping.length > 0) {\n      return (\n        <div>\n          {`${this.props.usersWhoAreTyping.slice(0, 2).join(' and ')} is typing...`}\n        </div>\n      )\n    }\n    return <div />\n  }\n}\n\nexport default TypingIndicator","import React, { Component } from 'react'\n\nclass WhosOnlineList extends Component {\n  renderUsers() {\n    return (\n      <ul>\n        {this.props.users.map((user, index) => {\n          if (user.id === this.props.currentUser.id) {\n            return (\n              <WhosOnlineListItem key={index} presenceState='online'>\n                {user.name} (You)\n              </WhosOnlineListItem>\n            )\n          }\n          return (\n            <WhosOnlineListItem key={index} presenceState={user.presence.state}>\n              {user.name}\n            </WhosOnlineListItem>\n          )\n        })}\n      </ul>\n    )\n  }\n\n  render() {\n    if (this.props.users) {\n      return this.renderUsers()\n    } else {\n      return <p>Loading...</p>\n    }\n  }\n}\n\nclass WhosOnlineListItem extends Component {\n  render() {\n    const styles = {\n      li: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: 5,\n        marginBottom: 5,\n        paddingTop: 2,\n        paddingBottom: 2,\n      },\n      div: {\n        borderRadius: '50%',\n        width: 11,\n        height: 11,\n        marginRight: 10\n      }\n    }\n    return (\n      <li style={styles.li}>\n        <div style={{\n          ...styles.div,\n          backgroundColor: this.props.presenceState === 'online' ? '#539eff' : '#414756'\n        }}/>\n        {this.props.children}\n      </li>\n    )\n  }\n}\n\nexport default WhosOnlineList","import React, {Component} from 'react'\nimport Chatkit from '@pusher/chatkit-client'\nimport MessageList from './MessageList'\nimport SendMessageForm from './SendMessageForm'\nimport TypingIndicator from './TypingIndicator'\nimport WhosOnlineList from './WhosOnlineList'\n\nclass ChatScreen extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentUser: {},\n      currentRoom: {},\n      messages: [],\n      usersWhoAreTyping: []\n    }\n    this.sendMessage = this.sendMessage.bind(this)\n    this.sendTypingEvent = this.sendTypingEvent.bind(this)\n  }\n\n  sendMessage(text) {\n    this.state.currentUser.sendMessage({\n      text,\n      roomId: this.state.currentRoom.id\n    })\n  }\n\n  sendTypingEvent() {\n    this.state.currentUser.isTypingIn({\n      roomId: this.state.currentRoom.id\n    }).catch(error => console.error('error', error))\n  }\n\n  componentDidMount() {\n    const chatManager = new Chatkit.ChatManager({\n      instanceLocator: 'v1:us1:89d1b499-0d13-44e1-94eb-1bfacb823194',\n      userId: this.props.currentUsername,\n      tokenProvider: new Chatkit.TokenProvider({\n        url: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/89d1b499-0d13-44e1-94eb-1bfacb823194/token'\n      })\n    })\n\n    chatManager.connect().then(currentUser => {\n      this.setState({currentUser})\n      return currentUser.subscribeToRoom({\n        roomId: '398fb67b-fa88-4a5c-88fe-34b881e767c7',\n        messageLimit: 100,\n        hooks: {\n          onMessage: message => {\n            this.setState({messages: [...this.state.messages, message]})\n          },\n          onUserStartedTyping: user => {\n            this.setState({\n              usersWhoAreTyping: [...this.state.usersWhoAreTyping, user.name]})\n          },\n          onUserStoppedTyping: user => {\n            this.setState({\n              usersWhoAreTyping: this.state.usersWhoAreTyping.filter(\n                username => username !== user.name)})\n          },\n          onPresenceChange: () => this.forceUpdate()\n        }\n      })\n    }).then(currentRoom => {\n      this.setState({currentRoom})\n    }).catch(error => console.error('error', error))\n  }\n\n  render() {\n    const styles = {\n      container: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      chatContainer: {\n        display: 'flex',\n        flex: 1\n      },\n      onlineListContainer: {\n        width: '300px',\n        flex: 'none',\n        padding: 20,\n        backgroundColor: '#2c303b',\n        color: 'white'\n      },\n      chatListContainer: {\n        padding: 20,\n        width: '85%',\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    }\n\n    return (\n      <div style={styles.container}>\n        <div style={styles.chatContainer}>\n          <aside style={styles.onlineListContainer}>\n            <WhosOnlineList\n              currentUser={this.state.currentUser}\n              users={this.state.currentRoom.users}/>\n          </aside>\n          <section style={styles.chatListContainer}>\n            <MessageList\n              messages={this.state.messages}\n              style={styles.chatList}/>\n            <TypingIndicator usersWhoAreTyping={this.state.usersWhoAreTyping} />\n            <SendMessageForm\n              onSubmit={this.sendMessage}\n              onChange={this.sendTypingEvent}/>\n          </section>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ChatScreen","import React, { Component } from 'react'\nimport UsernameForm from './components/UsernameForm'\nimport ChatScreen from './components/ChatScreen'\n\nimport { default as Chatkit } from '@pusher/chatkit-server';\n\nconst chatkit = new Chatkit({\n  instanceLocator: \"v1:us1:89d1b499-0d13-44e1-94eb-1bfacb823194\",\n  key: \"15a893a4-629f-4a8c-afaf-159f49361215:wGavMFeivKHDIVsJWRv29FH2Cfv8trfB0dTPgRrmIeY=\"\n})\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      currentUsername: '',\n      currentScreen: 'UsernameScreen'\n    }\n    this.onUsernameSubmitted = this.onUsernameSubmitted.bind(this)\n  }\n\n  onUsernameSubmitted(username) {\n    chatkit.createUser({\n      id: username,\n      name: username,\n    }).then(response => {\n      this.setState({\n        currentUsername: username,\n        currentScreen: 'ChatScreen'\n      })\n    }).catch(error => console.error('error', error))\n  }\n  render() {\n    if (this.state.currentScreen === 'UsernameScreen') {\n      return <UsernameForm onSubmit={this.onUsernameSubmitted}/>\n    }\n    if (this.state.currentScreen === 'ChatScreen') {\n      return <ChatScreen currentUsername={this.state.currentUsername} />\n    }\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}